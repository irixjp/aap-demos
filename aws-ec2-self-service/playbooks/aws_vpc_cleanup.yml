---
- name: Cleanup dev environment
  hosts: all
  gather_facts: no
  tasks:

    - name: Delete keypair
      amazon.aws.ec2_key:
        name: "{{ RESOURCE_TAG_ROLE }}-keypair"
        region: "{{ REGION }}"
        state: absent

    - name: Collect security groups
      amazon.aws.ec2_group_info:
        region: "{{ REGION }}"
        filters:
          "tag:role": "{{ RESOURCE_TAG_ROLE }}"
      register: secgroups

    - debug: var=secgroups

    - name: Delete sec group
      amazon.aws.ec2_group:
        region: "{{ REGION  }}"
        group_id: "{{ item.group_id }}"
        state: absent
      loop: "{{ secgroups.security_groups }}"
      when: secgroups.security_groups | length > 0
      register: secgroup_del
      until: secgroup_del is not failed
      retries: 30
      delay: 10

    - name: Collect route tables
      amazon.aws.ec2_vpc_route_table_info:
        region: "{{ REGION }}"
        filters:
          "tag:role": "{{ RESOURCE_TAG_ROLE }}"
      register: route_tables

    - debug: var=route_tables

    - name: Delete route table
      amazon.aws.ec2_vpc_route_table:
        region: "{{ REGION }}"
        route_table_id: "{{ item.id }}"
        vpc_id: "{{ item.vpc_id }}"
        lookup: id
        state: absent
      loop: "{{ route_tables.route_tables }}"
      when: route_tables.route_tables | length > 0
      register: routetable_del
      until: routetable_del is not failed
      retries: 30
      delay: 10

    - name: Collect Internet gateway
      amazon.aws.ec2_vpc_igw_info:
        region: "{{ REGION }}"
        filters:
          "tag:role": "{{ RESOURCE_TAG_ROLE }}"
      register: igw

    - debug: var=igw

    - name: Remove internet gateway
      amazon.aws.ec2_vpc_igw:
        region: "{{ REGION }}"
        vpc_id: "{{ item.attachments[0].vpc_id }}"
        state: absent
      loop: "{{ igw.internet_gateways }}"
      when: igw.internet_gateways | length > 0
      register: igw_del
      until: igw_del is not failed
      retries: 30
      delay: 10


    - name: Collect subnet info
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ REGION }}"
        filters:
          "tag:role": "{{ RESOURCE_TAG_ROLE }}"
      register: subnets

    - debug: var=subnets

    - name: Remove subnet
      amazon.aws.ec2_vpc_subnet:
        state: absent
        vpc_id: "{{ item.vpc_id }}"
        cidr: "{{ SUBNET_CIDR_BLOCK }}"
      loop: "{{ subnets.subnets }}"
      when: subnets.subnets | length > 0
      register: subnet_del
      until: subnet_del is not failed
      retries: 30
      delay: 10

    - name: Collect VPC info
      amazon.aws.ec2_vpc_net_info:
        region: "{{ REGION }}"
        filters:
          "tag:role": "{{ RESOURCE_TAG_ROLE }}"
      register: vpcs

    - debug: var=vpcs

    - name: Delete VPCs
      amazon.aws.ec2_vpc_net:
        region: "{{ REGION }}"
        name: "{{ VPC_NAME }}"
        cidr_block: "{{ VPC_CIDR_BLOCK }}"
        state: absent
      register: vpc_del
      until: vpc_del is not failed
      retries: 10
      delay: 10
